/*
 * Copyright 2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.gradle.build.ReleasedVersion
import org.gradle.build.UpdateReleasedVersions
import org.gradle.build.remote.DefaultRemoteGradleVersionResolver
import org.gradle.build.remote.VersionType

ext {
    releasedVersionsJsonFile = file('released-versions.json')
}

tasks.withType(UpdateReleasedVersions) {
    releasedVersionsFile = releasedVersionsJsonFile
}

task updateReleasedVersions(type: UpdateReleasedVersions) {
    def currentReleasedVersionProperty = project.findProperty('currentReleasedVersion')
    currentReleasedVersion = currentReleasedVersionProperty ? new ReleasedVersion(currentReleasedVersionProperty, project.findProperty('currentReleasedVersionBuildTimestamp')) : null
}

task updateReleasedVersionsToLatestNightly(type: UpdateReleasedVersions) {
    currentReleasedVersion = project.providers.provider {
        def nightlyVersion = new DefaultRemoteGradleVersionResolver().getVersionAsJson(VersionType.NIGHTLY)
        new ReleasedVersion(nightlyVersion.version, nightlyVersion.buildTime)
    }
}
