import org.gradle.gradlebuild.unittestandcompile.ModuleType

plugins {
    id 'java-library'
    id 'gradlebuild.strict-compile'
    id 'gradlebuild.classycle'
}

dependencies {
    api project(':core')
    api project(':resources')

    implementation project(':resourcesHttp')
    implementation libraries.slf4j_api.coordinates
    implementation libraries.guava.coordinates
    implementation libraries.awsS3_core.coordinates, libraries.awsS3_s3.coordinates, libraries.awsS3_kms.coordinates
    implementation libraries.jackson_core.coordinates, libraries.jackson_annotations.coordinates, libraries.jackson_databind.coordinates
    implementation libraries.commons_httpclient.coordinates, libraries.joda.coordinates
    implementation libraries.commons_lang.coordinates
}

testFixtures {
    from(':dependencyManagement')
    from(':ivy')
    from(':maven')
}

gradlebuildJava {
    moduleType = ModuleType.PLUGIN
}

tasks.withType(Test) {
    def javaVersion = rootProject.availableJavaInstallations.javaInstallationForTest.javaVersion
    if (javaVersion.java9Compatible) {
        jvmArgs '--add-modules', 'java.xml.bind'
    }
}

import org.gradle.gradlebuild.testing.integrationtests.cleanup.WhenNotEmpty
testFilesCleanup {
    policy = WhenNotEmpty.REPORT
}
