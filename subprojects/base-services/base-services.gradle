/*
 * A set of generic services and utilities.
 *
 * Should have a very small set of dependencies, and should be appropriate to embed in an external
 * application (eg as part of the tooling API).
 */
plugins {
    id 'java-library'
    id 'classycle'
}

sourceCompatibility = javaVersion.java9Compatible ? 1.6 : 1.5

dependencies {
    compile project(':distributionsDependencies')

    api libraries.guava.coordinates
    api libraries.jsr305.coordinates
    api libraries.fastutil.coordinates

    implementation libraries.slf4j_api.coordinates
    implementation libraries.commons_lang.coordinates
    implementation libraries.commons_io.coordinates
    implementation libraries.jcip.coordinates

    jmh(libraries.bouncycastle_provider.coordinates) { version { prefer libraries.bouncycastle_provider.version } }
}

testFixtures {
    from(':core')
}

jmh {
    include = ["HashingAlgorithmsBenchmark"]
}

task buildReceiptResource(type: Copy) {
    from {
        tasks.getByPath(':createBuildReceipt').outputs.files
    }
    destinationDir = file("${generatedTestResourcesDir}/${buildReceiptPackage}")
}
sourceSets.main.output.dir generatedTestResourcesDir, builtBy: buildReceiptResource
