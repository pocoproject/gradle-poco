import org.gradle.gradlebuild.unittestandcompile.ModuleType

plugins {
    id 'gradlebuild.strict-compile'
    id 'gradlebuild.classycle'
}

dependencies {
    implementation libraries.asm.coordinates
    implementation libraries.asm_commons.coordinates
    implementation libraries.groovy.coordinates

    compile project(":core")
    compile project(":platformJvm")
    compile project(":languageJvm")

    // TODO - get rid of this cycle
    integTestRuntime project(':plugins')
}

gradlebuildJava {
    // Needs to run in the compiler daemon
    moduleType = ModuleType.WORKER
}

testFixtures {
    from(':core')
    from(':languageJvm', 'testFixtures')
    from(':platformBase')
    from(':launcher')
}

classycle {
    // These public packages have classes that are tangled with the corresponding internal package.
    excludePatterns = ['org/gradle/api/tasks/compile/**',
                       'org/gradle/external/javadoc/**']
}

import org.gradle.gradlebuild.testing.integrationtests.cleanup.WhenNotEmpty
testFilesCleanup {
    policy = WhenNotEmpty.REPORT
}
